#include <AntiRebote.h>
#FUSES NOMCLR,NOWDT

typedef enum {
    DESPULSADO,
    PULSANDO,
    PULSADO,
    DESPULSANDO
} EstadoAR;
EstadoAR estado = DESPULSADO;

void INIT_GPIO();
void INIT_TIMER_0();

void main()
{

   while(TRUE){
      if(input(98) && estado != PULSANDO && estado !=PULSADO) {
      estado = PULSANDO;
      set_timer0(100);
      }
      if(input(98) && estado ==PULSADO){
      output_high(96);
      set_timer0(100);
      }
      if(!input(98) && estado != PULSADO  ){
      estado = DESPULSADO;
      output_low(96);
      }
   }

}

void INIT_GPIO()
{
   set_tris_a(0b00000100);
   set_tris_b(0b00000000);
}

#INT_TIMER0
void TIMER0_ISR(){
  set_timer0(100);
  switch(estado){
         case PULSANDO:
            estado = PULSADO;
            break;
         case PULSADO:
            estado = DESPULSANDO;
            break;
         case DESPULSANDO:
            estado = DESPULSADO;
            break;
  }
}

void INIT_TIMER0(){
   setup_timer_0(RTCC_INTERNAL | RTCC_DIV_128);
   set_timer0(100); 
   enable_interrupts(INT_TIMER0); 
   enable_interrupts(global);
}
